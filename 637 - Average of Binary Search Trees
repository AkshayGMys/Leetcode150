//Queue STL need to be revisited once
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) 
    {
        queue<TreeNode*> q;
        vector<double> ans;
        double sum = 0 ;
        int count = 0;
        q.push(root);
        q.push(NULL);

        while(!q.empty())
        {
            TreeNode* front = q.front();
            q.pop();

            if(front == NULL)
            {
                sum = sum/count ;
                ans.push_back(sum);
                sum = 0;
                count = 0;
                if(!q.empty())
                {
                    q.push(NULL);
                }
            }
            else
            {
                sum += front->val;
                ++count;
                if(front->right)
                    q.push(front->right);
                if(front->left)
                    q.push(front->left);
            }
        }
        return ans;
    }

};
