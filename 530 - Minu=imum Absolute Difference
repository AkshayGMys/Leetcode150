//I couldnt solve this shit , used chatgpt

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans = INT_MAX;  // Set to a high value initially
    TreeNode* prev = nullptr;  // To keep track of the previous node in inorder traversal

    void inorder(TreeNode* root) {
        if (root == nullptr) return;

        // Inorder traversal: Left -> Node -> Right
        inorder(root->left);

        // If there is a previous node, check the difference with the current node
        if (prev != nullptr) {
            ans = min(ans, abs(root->val - prev->val));
        }
        prev = root;  // Update the previous node to the current node

        inorder(root->right);
    }

    int getMinimumDifference(TreeNode* root) {
        inorder(root);  // Perform inorder traversal
        return ans;  // Return the minimum difference
    }
};
