/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

 //Long ass solution
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) 
    {
        int carry = 0;
        ListNode* head = new ListNode();
        ListNode* temp = head;
        while(l1 != nullptr && l2!=nullptr)
        {
            ListNode* newNode = new ListNode();
            newNode->val = (l1->val+l2->val+carry) %10;
            carry = (l1->val+l2->val+carry)/10;
            temp->next = newNode;
            temp = temp->next;
            l1 = l1->next;
            l2 = l2->next;
        }
        while(l1 != nullptr)
        {
            ListNode* newNode = new ListNode();
            newNode->val = (l1->val+carry) %10;
            carry = (l1->val+carry)/10;
             temp->next = newNode;
            temp = temp->next;
            l1 = l1->next; 
        }
        while(l2 != nullptr)
        {
            ListNode* newNode = new ListNode();
            newNode->val = (l2->val+carry) %10;
            carry = (l2->val+carry)/10;
            temp->next = newNode;
            temp = temp->next;
            l2 = l2->next; 
        }
        if(carry>0)
        {
            ListNode* newNode = new ListNode();
            newNode->val = carry;
            temp->next = newNode;
        }
        return head->next;
    }
};
